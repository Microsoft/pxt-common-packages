namespace image {

    export interface Font {
        charWidth: number;
        charHeight: number;
        data: Buffer;
        doubledCache?: Font;
    }

    //% whenUsed
    export const font8: Font = {
        charWidth: 8,
        charHeight: 8,
        // source http://pelulamu.net/unscii/
        data: hex`
20000000000000000000 21000000005f5f000000 22000007070000070700 2300147f7f147f7f1400 240000242e6b6b3a1200
2500466630180c666200 2600307a4f5d377a4800 27000000040703000000 280000001c3e63410000 2900000041633e1c0000
2a00082a3e1c1c3e2a08 2b000008083e3e080800 2c00000080e060000000 2d000008080808080800 2e000000006060000000
2f00406030180c060301 3000003e7f49457f3e00 31000040427f7f404000 3200006273594d474200 330000226349497f3600
3400181c16137f7f1000 350000276745457d3900 3600003c7e4b49793000 370000010171790f0700 380000367f49497f3600
390000064f49693f1e00 3a000000006666000000 3b00000080e666000000 3c0000081c3663410000 3d000014141414141400
3e00004163361c080000 3f0000020351590f0600 40003e7f415d5d5f1e00 4100007c7e13137e7c00 4200007f7f49497f3600
4300003e7f4141632200 4400007f7f41633e1c00 4500007f7f4949494100 4600007f7f0909090100 4700003e7f41497b7a00
4800007f7f08087f7f00 49000041417f7f414100 4a0000206040407f3f00 4b007f7f081c36634100 4c00007f7f4040404000
4d007f7f060c067f7f00 4e007f7f060c187f7f00 4f00003e7f41417f3e00 5000007f7f09090f0600 5100003e7f41217f5e00
5200007f7f09197f6600 530000266f49497b3200 54000001017f7f010100 5500003f7f40407f3f00 5600001f3f60603f1f00
57007f7f3018307f7f00 58004163361c1c366341 59000103067c7c060301 5a00006171594d474300 5b0000007f7f41410000
5c000103060c18306040 5d00000041417f7f0000 5e00080c0603060c0800 5f008080808080808080 60000000000103060400
610000207454547c7800 6200007f7f44447c3800 630000387c4444440000 640000387c44447f7f00 650000387c54545c1800
660000047e7f05050000 67000098bca4a4fc7c00 6800007f7f04047c7800 69000000047d7d404000 6a0000808080fd7d0000
6b00007f7f10386c4400 6c000000017f7f404000 6d007c7c08380c7c7800 6e00007c7c04047c7800 6f0000387c44447c3800
700000fcfc24243c1800 710000183c2424fcfc00 7200007c7c04040c0800 730000485c5454742400 740000043f7f44444400
7500003c7c40407c7c00 7600001c3c60603c1c00 77001c7c6030607c1c00 7800446c3810386c4400 7900001cbca0a0fc7c00
7a00004464745c4c4400 7b000008083e77414100 7c000000007f7f000000 7d00004141773e080800 7e000203010302030100
7f001f110e00047c0400 a0000000000000000000 a1000000007d7d000000 a200183c247e7e242400 a300487e7f4943622000
a40000151f0a0a1f1500 a5000103167c7c160301 a6000000007777000000 a700001abfa5a5fd5800 a8000001010000010100
a9007e8199bda5a5817e aa0000262f292f2f2800 ab00081c3622081c3622 ac0000020202020e0e00 ad000000080808080000
ae007e81bd9595a9817e af000001010101010100 b0000002070505070200 b1000044445f5f444400 b20000191d1712000000
b300001111151f0a0000 b4000000040603010000 b50080fc7c20203c1c00 b60000060f7f7f017f00 b7000000000808000000
b8000000004060000000 b90000021f1f00000000 ba0000262f292f260000 bb0022361c0822361c08 bc00426f30186c56fb41
bd00426f3018cceeba90 be0011556e30186c56fa bf000030784d45602000 c00000797d15147c7800 c10000787c14157d7900
c20000727a29297a7200 c3000273792b2a7b7100 c40000797d14147d7900 c5000070782b2b787000 c6007c7e0b097f7f4941
c700003e7fc1c1632200 c80000797d15147c7800 c90000787c14157d7900 ca00787a5a59494a4a00 cb0000797d14147d7900
cc000045457d7c444400 cd000044447c7d454500 ce00004a4a79794a4a00 cf000045457c7c454500 d000087f7f49633e1c00
d1007a7b1133227b7900 d200387d4545447c3800 d300387c4444457d3900 d400307a4a49497a3200 d500327b494b4a7b3100
d600387d4544447d3900 d70022361c081c362200 d800007e7f594d7f3f00 d9003c7d4141407c3c00 da003c7c4040417d3d00
db00387a4241417a3a00 dc003c7d4140407d3d00 dd00000c1c70711d0d00 de007f7f1414141c0800 df00007e7f01497f3600
e00000217555547c7800 e10000207454557d7900 e20020725a49497a7a00 e3002273594b4a7b7900 e40000217554547d7900
e5002070584b4b787800 e6002074547c3c545c58 e70000387cc4c4440000 e80000397d55545c1800 e90000387c54555d1900
ea0000327a59595a1200 eb0000397d54545d1900 ec000001457d7c400000 ed000000447c7d410100 ee0000024a7979420200
ef000001457c7c410100 f00030784a4a7f3f0200 f100027b790b0a7b7100 f20000397d45447c3800 f30000387c44457d3900
f40000327a49497a3200 f5000233794b4a7b3100 f60000397d44447d3900 f7000008086b6b080800 f800b87c64544c7c3a00
f900003d7d41407c7c00 fa00003c7c40417d7d00 fb00003a7a41417a7a00 fc00003d7d40407d7d00 fd00001cbca0a1fd7d00
fe0000ffff24243c1800 ff00001dbda0a0fd7d00 000100797d15157d7900 010100217555557d7900 020101737a2a2a7b7100
030121735a4a4a7b7900 0401007c7e1393fefc00 050100207454d4fcf800 0601387c444445454500 070100387c4445450100
0801307a4a49494a4a00 090100327a49494a0200 0a01387c444545444400 0b0100387c4545440000 0c013079494a4a494900
0d010031794a4a490100 0e010079794a4a793100 0f01387c447f7f000300 1001087f7f49633e1c00 11010030784a4a7f7f02
12017c7d555555454500 130100397d55555d1900 1401797b5a5a4a4b4900 150101337a5a5a5b1100 160100787c15157c7800
170100387c55555c1800 1801007f7f49c9c9c100 190100387c54d4dc9800 1a017879595a4a494900 1b010031795a5a591100
1c0100327a49496a6a00 1d010092baa9a9fa7a00 1e0101337a4a4a6b6900 1f010193baaaaafb7900 200100387c4555747400
21010098bca5a5fc7c00 220100beffc1497b7a00 23010090b8abaaf87800 2401007a7a11117a7a00 25017f7f080a09797200
2601027f7f0a0a7f7f02 2701007f7f0a0a787000 2801024b497b7a4b4900 29010203497b7a430100 2a010045457d7d454500
2b010001457d7d410100 2c01014b4a7a7a4b4900 2d0101034a7a7a430100 2e010041417fffc1c100 2f010000047dfdc0c000
30010044447d7d444400 31010000447c7c400000 32017f7f0020407f3f00 3301007d7d0080fd7d00 340140424241417a3a00
350100828281f97a0200 36017f7f089cf6634100 3701007f7f90f86c4400 3801007c7c10386c4400 3901007c7c4041414100
3a010000447c7d414100 3b01007f7fc0c0404000 3c010080c1ff7f400000 3d01007f7f4042434100 3e01417f7f4002030100
3f01007f7f4048484000 40010000447c7d414100 410110187f7f4c444000 42010011197f7f4c4400 43017c7c1830617d7d00
4401007c7c04057d7900 45017f7f068cd87f7f00 4601007c7c84c47c7800 47017879113222797900 48010079790a0a797100
49010c007c7c047c7800 4a017f7f0181c17f3e00 4b01007c7c0484fc7800 4c01387d4545457d3900 4d0100397d45457d3900
4e01317b4a4a4a7b3100 4f0101337a4a4a7b3100 5001327b49484a7b3100 5101023379484a7b3100 52013e7f41417f7f4900
5301387c44783c545800 5401007c7c14157d6900 5501007c7c04050d0900 56017f7f89c9197f6600 570100fcfc84040c0800
58010079792a2a795100 59010079790a0a191100 5a01484c545455752500 5b0100485c5455752500 5c01484e565555762600
5d01004a5e5555762600 5e0100a6efc9497b3200 5f0180c8dc5454742400 60015059597a6a692900 61010051597a7a692900
6201000181ffff010100 63010084bfff44440000 64010005057e7e050500 6501083e7e484a030100 66010001097f7f090100
670100143f7f54440000 68013a7b4143427b3900 6901023b7943427b7900 6a013c7d4141417d3d00 6b01003d7d41417d7d00
6c01397b4242427b3900 6d01013b7a42427b7900 6e013878404343783800 6f010038784343787800 70013a7b4140427b3900
7101023b7940427b7900 7201003f7f40c0ffbf00 7301003c7c40c0fcfc00 7401787a2231217a7a00 7501187a6231617a1a00
7601000a1a71711a0a00 7701001abaa1a1fa7a00 7801000d1d70701d0d00 7901446474545d4d4500 7a01004464745d4d4500
7b01446474555d4c4400 7c01004464755d4c4400 7d010049696a5a594900 7e010049696a5a594900 7f01007e7f0101030200
8001027f7f4a4a783000 810106017f7f497f3600 8201007f7f4949793100 8301007f7f45457d3800 8401027f7f4848783000
8501023f7f4848783000 860100226341417f3e00 87013c7e424242434300 8801387c444446470100 8901087f7f49633e1c00
8a0106417f7f417f3e00 8b0100307949497f7f00 8c0100387d45457f7f00 8d0100183ca4a4fc5800 8e0100414949497f7f00
8f01003a7b49497f3e00 900100367f4949632200 910180ff7f0909090100 920140c088fe7f090302 93013c7e425272730100
9401072f7850782f0700 95017f7f043c78407c3c 97010049497f7f494900 98017f7f081e77610300 9901007e7f11396d4400
9a010009097f7f484800 9b0170780a0a7f7f0200 9c013f7f407f407f7f00 9d01ffff0e1c387f7f00 9e01007c7c0404fcf800
9f01003e7f49497f3e00 cd010071792a2a797100 ce012071594a4a797900 cf010049497a7a494900 d0010001497a7a410100
d1013079494a4a793100 d2010031794a4a793100 d3013879414242793900 d4010039794242797900 d501397b4341437b3900
d601013b7b41437b7900 d7013a7a404243793a02 d801023a784243797a02 d9013a7a414343793a02 da01023a794343797a02
db013a7a414342783a02 dc01023a794342787a02 dd0100307454547c3800 de0101737b292b7b7100 df0121735b494b7b7900
e00101737b292b7b7100 e10121735b494b7b7900 e201787d15157d7d5544 e3012075557d3d555d58 e6010031794a4a696900
e7010091b9aaaaf97900 e801787911123a694900 f00100818182fa790100 f40100387c4455757500 f5010098bca4a5fd7d00
f8017c7d1931607c7c00 f901007d7d05047c7800 fa0100737b282a7b7100 fb0120735b484a7b7900 fc01787c14147d7d5544
fd012074547c3d555d58 fe0100787c54557d3d00 ff01b87c64544d7d3b00 000201737a28297b7200 010221735a48497b7a00
020202737929297b7200 030222735949497b7a00 0402797b5a58494b4a00 050201337a58595b1200 06027a7b5959494b4a00
070202337959595b1200 0802014b4a78794b4a00 090201034a7879430200 0a02024b4979794b4a00 0b020203497979430200
0c02317b4a48497b3200 0d0201337a48497b3200 0e02327b4949497b3200 0f0202337949497b3200 1002017b7a28297b5200
1102017b7a08091b1200 1202027b7929297b5200 1302027b7909091b1200 1402397b4240417b3a00 1502013b7a40417b7a00
16023a7b4141417b3a00 1702023b7941417b7a00 18020026efc9497b3200 19020048dcd454742400 1a02000181ff7f010100
1b020004bfff44444400 260200787c15157c7800 270200207455557c7800 2a02317b4b494b7b3100 2b0201337b494b7b3100
2c02357b4b4d4d7b3100 2d0205337b4d4d7b3100 2e02387c4445457c3800 2f0200387c45457c3800 3002317b4b494b7b3100
310201337b494b7b3100 3202000d1d71711d0d00 3302001dbda1a1fd7d00 580200185c54547c3800 590200307454547c3800
63020c5cf0a0f05c0c00 940200020371790f0600 c6020002020101020200 c9020000010101010000 cd020000808080800000
dc020503030505030100 4f030000000000000000 9103007c7e13137e7c00 9203007f7f49497f3600 9303007f7f0101010100
9403787c4643467c7800 9503007f7f4949494100 9603006171594d474300 9703007f7f08087f7f00 98033e7f4949497f3e00
99030041417f7f414100 9a037f7f081c36634100 9b03787c0603067c7800 9c037f7f060c067f7f00 9d037f7f060c187f7f00
9e03636b4949496b6300 9f03003e7f41417f3e00 a0037f7f0101017f7f00 a103007f7f09090f0600 a3034163775d49414100
a4030001017f7f010100 a50300070f78780f0700 a6031c3e227f223e1c00 a7034163361c1c366341 a8031e3e207f203e1e00
a9035e7f6101617f5e00 b103387c4444287c7c00 b203feff2949497f3600 b303046cf890f86c0400 b403317b4f4d49793100
b50300287c5454544400 b603337b49494d478300 b703007c7c0404fcf800 b803003e7f49497f3e00 b9030000003c7c400000
ba03007c7c10386c4400 bb03727b09090b7e7c00 bc03fcfc40403c7c4000 bd03001c3c60603c1c00 be03297d555545478300
bf0300387c44447c3800 c003047c7c047c7c0400 c10300f8fc24243c1800 c203387c444444cc8800 c303387c44444c7c3400
c4030004043c7c440400 c503043c7840407c3c00 c603183c24f8fc243c18 c703446c3810386c4400 c8031c3c20f8f8203c1c
c9033c7c6038607c3c00 000400797d15147c7800 010400797d14147d7900 050400266f49497b3200 06040041417f7f414100
07040045457c7c454500 080400206040407f3f00 1004007c7e13137e7c00 1104007f7f4949793100 1204007f7f49497f3600
1304007f7f0101010100 1404c0fc7e43417fffc0 1504007f7f4949494100 160463771c7f1c776300 170400226349497f3600
18047f7f30180c7f7f00 19047e7e31190d7e7e00 1a047f7f081c36634100 1b04407c3e03017f7f00 1c047f7f060c067f7f00
1d04007f7f08087f7f00 1e04003e7f41417f3e00 1f04007f7f01017f7f00 2004007f7f09090f0600 2104003e7f4141632200
22040001017f7f010100 230400474f48487f3f00 24041c3e227f223e1c00 25044163361c1c366341 26047f7f40407fffc000
2704070f0808087f7f00 28047f7f407f407f7f00 29047f7f407f407fffc0 2a0407037f7f48783000 2b047f7f4878307f7f00
2c04007f7f4848783000 2d04226349496b3e1c00 2e047f7f087f417f3e00 2f04004e7f31117f7f00 300400207454547c7800
3104003c7e4a4a7b3100 3204007c7c54547c2800 3304007c7c0404040400 3404c0f87c447cfcc000 350400387c54545c1800
3604446c387c386c4400 3704286c4454547c2800 38047c7c6030187c7c00 39047c7c62321a7c7c00 3a04007c7c10386c4400
3b0440787c04047c7c00 3c047c7c1838187c7c00 3d04007c7c10107c7c00 3e0400387c44447c3800 3f04007c7c04047c7c00
400400fcfc24243c1800 410400387c4444440000 42040004047c7c040400 4304001cbca0a0fc7c00 4404183c24ff243c1800
4504446c3810386c4400 46047c7c40407cfcc000 4704000c1c10107c7c00 48047c7c407c407c7c00 49047c7c407c40fcfc00
4a040c7c7c5050702000 4b047c7c5070207c7c00 4c04007c7c5050702000 4d04286c4454547c3800 4e047c7c1038447c3800
4f0400487c34147c7c00 500400397d55545c1800 510400397d54545d1900 550400485c5454742400 56040000047d7d404000
57040001457c7c410100 580400808080fd7d0000 d00401737a2a2a7b7100 d10421735a4a4a7b7900 d20400797d14147d7900
d30400217554547d7900 d4047c7e0b097f7f4941 d5042074547c3c545c58 d604797b5a5a4a4b4900 d70401337a5a5a5b1100
e604387d4544447d3900 e70400397d44447d3900 f104001dbda0a0fd7d00 d00500363e0c183e3600 d105002222223e3e2000
d205000020321a3e3e00 d305000202023e3e0200 d405003a3a02023e3c00 d505000000023e3e0000 d60500000002063e3a00
d70500023e3e023e3e00 d805003f3f20223e3e00 d905000002020e0e0000 da0500000202027e7e00 db0500002222223e3e00
dc0500030302223e3e00 dd05023e3e22223e3e00 de05003a3e04263e3c00 df05000000027e7e0000 e005000020223e3e0000
e10500001e3e223e1e00 e20500203e3e203e3e00 e305000e0e0a027e7e00 e405002e2e2a223e3e00 e5050000060e787e0600
e60500262e28383e3600 e70500007a7a023e1e00 e805000202023e3c0000 e9053e3e203e203e3e00 ea0500203e3e023e3e00
2306000002033d000000 2706000000001f000000 28060c1010505010100c 2906000000011d14151d 2a060c1011111011110c
2b060812121111121208 2c0600006094d4d49890 2d060000609494949890 2f060000001810121418 30060000011910121418
31060000404040402018 3206000040404040221a 33060038403810181018 34060038403812191218 3506003840381814141c
37061010101f1814141c 38061010101f1815151c 3906000030484e4a4a00 3a06000031494e4a4a00 40061010101010101010
41060c1010101c15151c 4206384040415d54553d 4306000c10141612100f 4406304040404040403f 45060000e01010182418
46060e1010111110100e 47060000001c141c0000 48060000404040585438 49060030404040485434 4a060018a0a020a4aa1a
71060004023b05050200 72060004023802050500 73060040200f20505000 10200000080808080000 11200000080808080000
12200008080808080000 13200808080808080800 14200808080808080808 15200808080808080800 1620007f7f007f7f0000
1720a0a0a0a0a0a0a0a0 18200001010100000000 19200000000001010100 1c200103020001030200 1d200203010002030100
20200004047f7f040400 21200014147f7f141400 22200000183c3c180000 24200000006060000000 25200060600000606000
26206000006000006000 3020667610686c066260 3120667610680c660260 3c20005f5f00005f5f00 4720595f0600595f0600
482051590f06005f5f00 49205f5f0051590f0600 7020000e1f111f0e0000 7420000c0e091f1f0800 7520001717151d090000
7620000e1f151d080000 77200001191d07030000 7820000a1f151f0a0000 7920000217151f0e0000 7f20001e1e021e1c0000
a720ffff09092ff6f8a0 ac20143e7f5555454100 17217e81bd959589817e 2021121509001f061f00 2221011f01001f061f00
902100183c7e18181818 9121000406ffff060400 9221181818187e3c1800 9421183c7e18187e3c18 96210f070f1d38702000
9721002070381d0f070f 982100040e1cb8f0e0f0 9921f0e0f0b81c0e0400 a521002466ffff662400 a8218094b6ffffb69480
e621183c66c3e724243c e721181cf68383f61c18 e8213c2424e7c3663c18 e92118386fc1c16f3818 12220008080808080800
182200183c24243c1800 1a2218306030180c0603 1e22183c241c38243c18 1f223c3c202020202000 2922007e7f01017f7e00
48222436123624361200 6122002a2a2a2a2a2a00 64220040444e5b514000 65220040515b4e444000 c5220000000c0c000000
2023000000feff010706 212360e080ff7f000000 ea2310387c0010387c00 eb230011337733110000 ec237c3810007c381000
61ff0020705070200000 62ff0000000f0f010100 63ff0040407878000000 64ff0010306040000000 65ff0000001818000000
66ff00054565351f0f00 67ff447424341c0c0400 68ff10180c7e7e020000 69ff000c0c46663c1c00 6aff0044447c7c444400
6bff24341c0c7e7e0400 6cff047e7e04141c0c00 6dff004044447c7c4000 6eff005454547c7c0000 6fff000c004c603c1c00
70ff0008080808080800 71ff0001417d390f0700 72ff10180c7e7f010000 73ff000e0e43633e1e00 74ff0042427e7e424200
75ff22321a0e7f7f0200 76ff42623f1f027e7e00 77ff000a0a7f7f0a0a00 78ff04070341613f1f00 79ff080f07427e3e0200
7aff00424242427e7e00 7bff020f0f427f3f0200 7cff004a4a40603c1c00 7dff4262321a3e664000 7eff023f7f424a4e0600
7fff03074460301f0f00 80ff080f0745653f1f00 81ff000a4a7e3e0b0900 82ff00070047603f1f00 83ff0004457d3d050400
84ff007f7f040c181000 85ff0002427f3f020200 86ff0040424242424000 87ff4a6a3a1a3e664000 88ff12127b7b0e1e1200
89ff00406030180f0700 8aff407c3c01037e7c00 8bff003f7f4444444400 8cff00014161311f0f00 8dff080c06060c383000
8eff0032027f7f023200 8fff00123262521e0e00 90ff0021252525614000 91ff787c464351706000 92ff40643c183f270000
93ff0004053f7f454500 94ff027f7f02121e0e00 95ff004042427e7e4000 96ff004a4a4a4a7e7e00 97ff00040545653d1c00
98ff001f1f40603f1f00 99ff407e3e007f7f2000 9aff007f7f4060381800 9bff7e7e4242427e7e00 9cff07070141613f1f00
9dff0042424060381800 9eff0103020001030200 9fff0002070507020000 
`,


    }

    export function doubledFont(f: Font): Font {
        if (f.doubledCache) return f.doubledCache
        let byteHeight = (f.charHeight + 7) >> 3
        let sz = f.charWidth * byteHeight
        let numChars = f.data.length / (sz + 2)
        let newByteHeight = ((f.charHeight * 2) + 7) >> 3
        let nsz = f.charWidth * 2 * newByteHeight
        let data = control.createBuffer((nsz + 2) * numChars)
        let tmp = control.createBuffer(4 + sz)
        tmp[0] = 0xe1
        tmp[1] = f.charWidth
        tmp[2] = f.charHeight
        let dst = 0
        for (let i = 0; i < f.data.length; i += 2 + sz) {
            tmp.write(4, f.data.slice(i + 2, sz))
            let dbl = image.doubledIcon(tmp).slice(4)
            data[dst] = f.data[i]
            data[dst + 1] = f.data[i + 1]
            data.write(dst + 2, dbl)
            dst += 2 + dbl.length
        }
        f.doubledCache = {
            charWidth: f.charWidth * 2,
            charHeight: f.charHeight * 2,
            data: data
        }
        return f.doubledCache
    }

    //% whenUsed
    export const font5: Font = {
        charWidth: 6,
        charHeight: 5,
        // source https://github.com/lancaster-university/microbit-dal/blob/master/source/core/MicroBitFont.cpp
        data: hex`
2000000000000000 2100001700000000 2200000300030000 23000a1f0a1f0a00 24000a17151d0a00 2500130904121900
26000a15150a1000 2700000300000000 2800000e11000000 290000110e000000 2a00000a040a0000 2b0000040e040000
2c00001008000000 2d00000404040000 2e00000800000000 2f00100804020100 30000e11110e0000 310000121f100000
3200191515120000 33000911150b0000 34000c0a091f0800 3500171515150900 3600081416150800 3700110905030100
38000a1515150a00 390002150d050200 3a00000a00000000 3b0000100a000000 3c0000040a110000 3d00000a0a0a0000
3e0000110a040000 3f00020115050200 40000e1115090e00 41001e05051e0000 42001f15150a0000 43000e1111110000
44001f11110e0000 45001f1515110000 46001f0505010000 47000e1111150c00 48001f04041f0000 4900111f11000000
4a000911110f0100 4b001f040a110000 4c001f1010100000 4d001f0204021f00 4e001f0204081f00 4f000e11110e0000
50001f0505020000 5100060919160000 52001f05050a1000 5300121515090000 540001011f010100 55000f10100f0000
5600070810080700 57001f0804081f00 58001b04041b0000 590001021c020100 5a00191513110000 5b00001f11110000
5c00010204081000 5d000011111f0000 5e00000201020000 5f00101010101000 6000000102000000 61000c12121e1000
62001f1414080000 63000c1212120000 64000814141f0000 65000e1515120000 6600041e05010000 67000215150f0000
68001f0404180000 6900001d00000000 6a000010100d0000 6b001f040a100000 6c00000f10100000 6d001e0204021e00
6e001e02021c0000 6f000c12120c0000 70001e0a0a040000 7100040a0a1e0000 72001c0202020000 730010140a020000
7400000f14141000 75000e10101e1000 7600060810080600 77001e1008101e00 7800120c0c120000 7900121408040200
7a00121a16120000 7b0000041f110000 7c00001f00000000 7d00111f04000000 7e00000404080800 d3000c1213130c00
f3000c12130d0000 04010e05051e1000 05010609191f0800 06010c1213131200 07010c1213130000 18010f0b1b190000
19010e151d1a0000 41011f1412100000 4201100f14120000 43011f0205081f00 44011e03031c0000 5a0110140b030200
5b0110140b030000 7901121a17130000 7a01121a17130000 7b01121b17120000 7c01121b17120000`,
    }
}

interface Image {
    //% helper=imagePrint
    print(text: string, x: number, y: number, color?: number, font?: image.Font): void;

    //% helper=imagePrintCenter
    printCenter(text: string, y: number, color?: number, font?: image.Font): void;
}

namespace helpers {
    export function imagePrintCenter(img: Image, text: string, y: number, color?: number, font?: image.Font) {
        if (!font) font = image.font8
        let w = text.length * font.charWidth
        let x = (screen.width - w) / 2
        imagePrint(img, text, x, y, color, font)
    }

    export function imagePrint(img: Image, text: string, x: number, y: number, color?: number, font?: image.Font) {
        x |= 0
        y |= 0
        if (!font) font = image.font8
        if (!color) color = 1
        let x0 = x
        let cp = 0
        let byteHeight = (font.charHeight + 7) >> 3
        let charSize = byteHeight * font.charWidth
        let imgBuf = control.createBuffer(4 + charSize)
        let dataSize = 2 + charSize
        let fontdata = font.data
        let lastchar = Math.idiv(fontdata.length, dataSize) - 1
        imgBuf[0] = 0xe1
        imgBuf[1] = font.charWidth
        imgBuf[2] = font.charHeight
        while (cp < text.length) {
            let ch = text.charCodeAt(cp++)
            if (ch == 10) {
                y += font.charHeight + 2
                x = x0
            }

            if (ch < 32)
                continue // skip control chars

            // decompose Korean characters
            let arr = [ch]
            if (44032 <= ch && ch <= 55203) {
                ch -= 44032
                arr = [
                    Math.idiv(ch, 588) + 0x1100,
                    (Math.idiv(ch, 28) % 21) + 0x1161,
                ]
                ch %= 28
                if (ch)
                    arr.push(ch % 28 + 0x11a7)
            }

            for (let cc of arr) {
                let l = 0
                let r = lastchar
                let off = 0 // this should be a space (0x0020)
                let guess = (ch - 32) * dataSize
                if (fontdata.getNumber(NumberFormat.UInt16LE, guess) == cc)
                    off = guess
                else {
                    while (l <= r) {
                        let m = l + ((r - l) >> 1);
                        let v = fontdata.getNumber(NumberFormat.UInt16LE, m * dataSize)
                        if (v == cc) {
                            off = m * dataSize
                            break
                        }
                        if (v < cc)
                            l = m + 1
                        else
                            r = m - 1
                    }
                }

                imgBuf.write(4, fontdata.slice(off + 2, charSize))
                img.drawIcon(imgBuf, x, y, color)
                x += font.charWidth
            }
        }
    }
}
